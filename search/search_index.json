{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to ASIC Interview Questions! \ud83d\ude80","text":""},{"location":"#about-this-website","title":"\ud83d\udccc About This Website","text":"<p>This website is a collection of ASIC design interview questions, covering: - Digital Design - Verification - Physical Design - Synthesis &amp; STA - DFT (Design for Test) - Mixed-Signal Design - Low-Power Design</p> <p>Whether you're preparing for an ASIC Engineer role or brushing up on key concepts, this site will help!</p>"},{"location":"#how-to-use-this-site","title":"\ud83d\udd0d How to Use This Site","text":"<ul> <li>Navigate using the top menu or search bar.</li> <li>Click on a topic to explore interview questions and answers.</li> </ul> <p>Powered by MkDocs &amp; Material for MkDocs.</p>"},{"location":"questions/dft/","title":"DFT (Design for Test) Interview Questions","text":""},{"location":"questions/dft/#1-what-is-scan-chain-in-dft","title":"1. What is scan chain in DFT?","text":"<p>A scan chain converts flip-flops into shift registers, allowing test patterns to be shifted in and out.</p>"},{"location":"questions/dft/#2-what-is-stuck-at-fault-testing","title":"2. What is stuck-at fault testing?","text":"<p>A stuck-at-0 or stuck-at-1 fault occurs when a signal remains at a fixed value, regardless of input.</p>"},{"location":"questions/dft/#3-what-is-atpg","title":"3. What is ATPG?","text":"<p>Automatic Test Pattern Generation (ATPG) generates test patterns to detect faults in ASICs.</p>"},{"location":"questions/dft/#4-what-is-bist-built-in-self-test","title":"4. What is BIST (Built-In Self-Test)?","text":"<p>BIST is a self-checking circuit that runs internal tests without external test vectors.</p>"},{"location":"questions/dft/#5-what-is-boundary-scan-jtag","title":"5. What is boundary scan (JTAG)?","text":"<p>JTAG (IEEE 1149.1) allows testing of I/O pins without physical probes.</p>"},{"location":"questions/digital/","title":"Digital Design Interview Questions","text":""},{"location":"questions/digital/#1-what-is-setup-and-hold-time","title":"1. What is setup and hold time?","text":"<p>Setup time is the minimum time before the clock edge that data must be stable. Hold time is the minimum time after the clock edge that data must remain stable.</p>"},{"location":"questions/digital/#2-what-happens-if-setup-time-is-violated","title":"2. What happens if setup time is violated?","text":"<p>A setup time violation can cause metastability, leading to unpredictable output states.</p>"},{"location":"questions/digital/#3-how-does-a-flip-flop-differ-from-a-latch","title":"3. How does a flip-flop differ from a latch?","text":"Feature Flip-Flop (FF) Latch Triggered by Clock edge Level-sensitive Power Consumption Higher Lower Usage Registers, Pipelines Gating, Low-power designs"},{"location":"questions/digital/#4-how-do-you-synchronize-an-asynchronous-signal-in-a-clocked-system","title":"4. How do you synchronize an asynchronous signal in a clocked system?","text":"<p>A 2-flop synchronizer is used to avoid metastability when transferring signals across clock domains.</p>"},{"location":"questions/digital/#5-what-is-meant-by-glitch-in-combinational-logic","title":"5. What is meant by \"glitch\" in combinational logic?","text":"<p>A glitch is a temporary unintended pulse due to differing propagation delays in logic paths.</p>"},{"location":"questions/digital/#axi-interview-questions-and-answers","title":"AXI Interview Questions and Answers","text":"<ol> <li>What are the key differences between AXI3 and AXI4? AXI4 introduces key improvements over AXI3:</li> <li>AXI4 removes write interleaving, making write data ordering simpler.</li> <li>AXI4 introduces burst transactions up to 256 beats, while AXI3 allows only 16 beats.</li> <li>AXI4 removes locked transactions, which were present in AXI3.</li> <li>AXI4 supports a simplified, more efficient interface for high-speed transfers.</li> <li>How do the AXI read and write channels work? AXI has independent read and write channels:</li> <li>Write Transaction: Uses <code>AW</code> (address write), <code>W</code> (write data), and <code>B</code> (write response) channels.</li> <li>Read Transaction: Uses <code>AR</code> (address read) and <code>R</code> (read data) channels. Each transaction is handshake-based using <code>VALID</code> and <code>READY</code> signals.</li> <li>Explain the purpose of AWVALID, WVALID, BVALID, ARVALID, and RVALID signals in AXI.</li> <li>AWVALID: Indicates a valid write address.</li> <li>WVALID: Indicates valid write data.</li> <li>BVALID: Indicates a valid write response.</li> <li>ARVALID: Indicates a valid read address.</li> <li>RVALID: Indicates valid read data.</li> <li>What are the different response types in AXI, and what do they indicate?</li> <li><code>OKAY (00)</code>: Successful normal access.</li> <li><code>EXOKAY (01)</code>: Exclusive access successful (for locked transactions in AXI3).</li> <li><code>SLVERR (10)</code>: Slave error occurred.</li> <li><code>DECERR (11)</code>: Decode error, meaning an invalid address was accessed.</li> <li>How does AXI ensure data integrity in transfers?</li> <li>AXI ensures integrity via handshaking (<code>VALID</code> and <code>READY</code> signals).</li> <li>It supports ECC (Error Correction Code) in high-reliability applications.</li> <li>It uses response signals (<code>BRESP</code>, <code>RRESP</code>) to indicate errors.</li> <li>What is the significance of AWREADY, WREADY, BREADY, ARREADY, and RREADY signals?</li> <li>AWREADY: Slave is ready to accept the write address.</li> <li>WREADY: Slave is ready to accept the write data.</li> <li>BREADY: Master is ready to accept the write response.</li> <li>ARREADY: Slave is ready to accept the read address.</li> <li>RREADY: Master is ready to accept the read data.</li> <li>How does AXI handle out-of-order transactions?</li> <li>AXI supports out-of-order transactions using unique transaction IDs (<code>AxID</code>).</li> <li>The slave can return responses in a different order than received but must ensure responses for the same ID maintain order.</li> <li>Reordering logic in interconnects allows efficient pipelining.</li> <li>What are AXI QoS (Quality of Service) signals, and how do they impact system performance?</li> <li><code>AxQOS</code> (4-bit signal) allows assigning priority to transactions.</li> <li>Higher priority transactions can be serviced first in congestion scenarios.</li> <li>Useful for real-time applications like video streaming and networking.</li> <li>How does AXI achieve pipelined transactions?</li> <li>AXI decouples the address, data, and response phases using independent channels.</li> <li>This allows multiple transactions to be active simultaneously, improving bandwidth utilization.</li> <li>How does AXI manage back-to-back transactions?</li> <li>The master can issue back-to-back transactions without waiting for responses.</li> <li>Out-of-order transactions allow parallel processing, improving efficiency.</li> <li>How does an AXI interconnect work?</li> <li>An AXI interconnect routes transactions between multiple masters and slaves.</li> <li>It handles arbitration, protocol conversion, and clock domain crossing.</li> <li>What happens if two AXI masters try to access the same AXI slave simultaneously?</li> <li>The interconnect arbitrates between masters using fairness or priority-based schemes.</li> <li>Explain the different arbitration schemes used in AXI.</li> <li>Round-robin: Equal priority among masters.</li> <li>Fixed priority: High-priority master always wins.</li> <li>Dynamic arbitration: Adjusts priority based on real-time traffic.</li> <li>How would you design an AXI interconnect for multiple masters and slaves?</li> <li>Use an AXI crossbar switch to allow concurrent master-slave transactions.</li> <li>Implement arbitration to resolve conflicts.</li> <li>What are the advantages of using an AXI crossbar?</li> <li>Allows simultaneous multiple transactions.</li> <li>Reduces contention compared to shared-bus architectures.</li> <li>What are the different types of AXI bursts?</li> <li>FIXED: All addresses are the same.</li> <li>INCR: Sequentially increasing addresses.</li> <li>WRAP: Wraps around on boundary crossing.</li> <li>How does AXI handle misaligned data accesses?</li> <li>Uses <code>WSTRB</code> signals to enable specific bytes in a word.</li> <li>What happens if an AXI burst crosses a 4KB boundary?</li> <li>AXI does not allow bursts to cross 4KB boundaries to prevent address wrap issues.</li> <li>How is the AxLEN signal used in burst transactions?</li> <li>Specifies the number of data beats (0-255 in AXI4).</li> <li>How does AXI handle write strobes (WSTRB)?</li> <li>Specifies which bytes are valid in a write transaction.</li> <li>How does AXI handle clock domain crossing?</li> <li>Uses synchronizers, FIFOs, or asynchronous bridges.</li> <li>What is an AXI register slice, and when should it be used?</li> <li>Adds pipeline registers to improve timing closure.</li> <li>How does AXI handle reset and initialization?</li> <li>Uses <code>ARESETn</code> to reset all channels synchronously.</li> <li>How would you design an AXI bridge between different clock domains?</li> <li>Use FIFO-based CDC techniques.</li> <li>What are the challenges in designing an AXI-to-APB or AXI-to-AHB bridge?</li> <li>Handling protocol differences in timing, burst types, and response mechanisms.</li> </ol>"},{"location":"questions/mixed_signal/","title":"Mixed-Signal Design Interview Questions","text":""},{"location":"questions/mixed_signal/#1-what-are-the-key-challenges-in-mixed-signal-verification","title":"1. What are the key challenges in mixed-signal verification?","text":"<ul> <li>Analog-digital interface modeling</li> <li>Noise coupling effects</li> <li>Cross-domain synchronization</li> </ul>"},{"location":"questions/mixed_signal/#2-how-does-an-adc-work","title":"2. How does an ADC work?","text":"<p>An Analog-to-Digital Converter (ADC) samples an analog signal and converts it into a digital word using quantization.</p>"},{"location":"questions/mixed_signal/#3-what-are-common-adc-architectures","title":"3. What are common ADC architectures?","text":"<ul> <li>SAR ADC (Successive Approximation Register)</li> <li>Pipeline ADC</li> <li>Sigma-Delta ADC</li> </ul>"},{"location":"questions/mixed_signal/#4-what-is-phase-noise-in-plls","title":"4. What is phase noise in PLLs?","text":"<p>Phase noise is the jitter in frequency output of a PLL caused by noise sources.</p>"},{"location":"questions/mixed_signal/#5-what-is-charge-pump-leakage","title":"5. What is charge pump leakage?","text":"<p>Leakage in charge pumps causes voltage drift, affecting PLL stability.</p>"},{"location":"questions/physical/","title":"Physical Design (PD) Interview Questions","text":""},{"location":"questions/physical/#1-what-are-the-key-steps-in-asic-physical-design","title":"1. What are the key steps in ASIC Physical Design?","text":"<ul> <li>Floorplanning </li> <li>Power Planning </li> <li>Placement &amp; CTS (Clock Tree Synthesis) </li> <li>Routing </li> <li>Timing Closure &amp; Signoff</li> </ul>"},{"location":"questions/physical/#2-what-is-clock-skew-and-how-is-it-managed","title":"2. What is clock skew and how is it managed?","text":"<p>Clock skew is the difference in clock arrival times at different flip-flops. Managed using: - Clock Tree Synthesis (CTS) - Buffering and Load Balancing - Useful Skew Adjustment</p>"},{"location":"questions/physical/#3-what-is-ocv-on-chip-variation-and-why-does-it-matter","title":"3. What is OCV (On-Chip Variation) and why does it matter?","text":"<p>OCV accounts for process variations across the die, affecting timing closure.</p>"},{"location":"questions/physical/#4-what-is-ir-drop-and-how-is-it-reduced","title":"4. What is IR Drop and how is it reduced?","text":"<p>IR Drop is voltage loss due to resistance in power rails. Reduced by: - Adding Power Straps - Using Proper Decap Cells - Optimizing Routing Layers</p>"},{"location":"questions/synthesis/","title":"Synthesis &amp; Static Timing Analysis (STA) Interview Questions","text":""},{"location":"questions/synthesis/#1-what-is-the-difference-between-rtl-and-netlist","title":"1. What is the difference between RTL and netlist?","text":"<ul> <li>RTL is high-level, written in Verilog/VHDL.  </li> <li>Netlist is a gate-level representation after synthesis.</li> </ul>"},{"location":"questions/synthesis/#2-what-are-false-paths-and-multi-cycle-paths","title":"2. What are false paths and multi-cycle paths?","text":"<ul> <li>False Path: A timing path that never gets activated in real operation.</li> <li>Multi-Cycle Path (MCP): A path that has more than one clock cycle to complete.</li> </ul>"},{"location":"questions/synthesis/#3-what-are-setup-and-hold-time-violations","title":"3. What are setup and hold time violations?","text":"<ul> <li>Setup Violation: Data is not stable before the clock edge.</li> <li>Hold Violation: Data changes too early after the clock edge.</li> </ul>"},{"location":"questions/synthesis/#4-what-is-clock-gating-and-why-is-it-used","title":"4. What is clock gating and why is it used?","text":"<p>Clock gating reduces dynamic power consumption by disabling the clock when logic is inactive.</p>"},{"location":"questions/synthesis/#5-what-is-the-role-of-primetime-in-asic-design","title":"5. What is the role of PrimeTime in ASIC design?","text":"<p>PrimeTime (PT) is a timing analysis tool used for: - Setup/Hold Analysis - Clock Tree Analysis - Path Delay Debugging</p>"},{"location":"questions/verification/","title":"ASIC Verification Interview Questions","text":""},{"location":"questions/verification/#1-what-is-constrained-random-verification","title":"1. What is constrained random verification?","text":"<p>Constrained random verification (CRV) is a UVM methodology where input vectors are randomly generated under constraints to improve test coverage.</p>"},{"location":"questions/verification/#2-what-is-functional-coverage-and-how-is-it-different-from-code-coverage","title":"2. What is functional coverage, and how is it different from code coverage?","text":"<ul> <li>Functional coverage ensures that all features and scenarios are tested.  </li> <li>Code coverage checks if all statements, branches, and FSM states in RTL were exercised.</li> </ul>"},{"location":"questions/verification/#3-what-are-assertions-in-verification","title":"3. What are assertions in verification?","text":"<p>Assertions are properties written in SVA (SystemVerilog Assertions) to monitor and validate signal behavior during simulation.</p>"},{"location":"questions/verification/#4-what-is-a-transaction-in-uvm","title":"4. What is a transaction in UVM?","text":"<p>A transaction is a data object that captures signal transfers, representing a single event in stimulus-response modeling.</p>"},{"location":"questions/verification/#5-how-do-you-debug-a-failing-test-in-simulation","title":"5. How do you debug a failing test in simulation?","text":"<ol> <li>Check waveform (VCD, FSDB)</li> <li>Analyze log files for assertion failures</li> <li>Use UVM debug tools (uvm_report, backtrace)</li> <li>Enable finer-grained print logs</li> </ol>"}]}